import { ChangeEventHandler, useState, useEffect } from 'react'
import HeadComponent from 'next/head'
import { Inter } from '@next/font/google'
import { useAudioPlayer } from 'react-use-audio-player'
import { Button, Upload, UploadFile, UploadProps } from 'antd'
import { PlusOutlined } from '@ant-design/icons'
import { create } from 'zustand'

import styles from 'src/styles/Home.module.css'
import { RcFile } from 'antd/es/upload'

const inter = Inter({ subsets: ['latin'] })

const Head = () => (
  <HeadComponent>
    <title>Create Next App</title>
    <meta name='description' content='Generated by create next app' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <link rel='icon' href='/favicon.ico' />
  </HeadComponent>
)

interface SongFile {
  file: RcFile
  objectUrl: string
}

interface SongsState {
  songs: Array<SongFile>
  addSong: (song: RcFile) => void
  deleteSong: (id: string) => void
}

const useSongsStore = create<SongsState>((set) => ({
  songs: [],
  addSong: (song) =>
    set((state) => {
      console.log('elo')

      const finalSong = {
        file: song,
        objectUrl: URL.createObjectURL(song),
      }

      return { songs: [...state.songs, finalSong] }
    }),
  deleteSong: (id) => {
    console.log({ id })
  },
}))

// const PlayerLogic

export default function Home() {
  // make a context out of it to have a singleton
  const { togglePlayPause, ready, loading, playing, load, pause } =
    useAudioPlayer()

  const { songs, addSong, deleteSong } = useSongsStore((state) => ({
    songs: state.songs,
    addSong: state.addSong,
    deleteSong: state.deleteSong,
  }))

  const props: UploadProps = {
    accept: 'audio/mpeg3',
    name: 'addSong',
    showUploadList: false,
    // TODO: Only for convenience, change later
    multiple: false,
    beforeUpload(file) {
      addSong(file)

      return false
    },
  }

  return (
    <>
      <Head />
      <main className={styles.main}>
        <div className='flex flex-col gap-2'>
          <h1 className='text-3xl font-bold underline mb-10'>Music player</h1>

          <Upload {...props}>
            <Button
              style={{ display: 'flex', alignItems: 'center' }}
              icon={<PlusOutlined />}
            >
              Click to add song
            </Button>
          </Upload>
          <div>
            <h2>Songs:</h2>
            {songs.map((song) => (
              <div className='flex gap-8' key={song.file.uid}>
                <p>{song.file.name}</p>
                <button
                  onClick={() => {
                    if (ready) return togglePlayPause()

                    load({
                      src: song.objectUrl,
                      // format: ['mp3'],
                      format: [song.file.type],
                      autoplay: true,
                    })
                  }}
                >
                  Play
                </button>
              </div>
            ))}
          </div>

          {/* {ready && (
  <div className='flex gap-8'>
    <button onClick={togglePlayPause}>
      {playing ? 'Pause' : 'Play'}
    </button>
    <button onClick={rest.stop}>Stop</button>
  </div>
)} */}
        </div>
      </main>
    </>
  )
}
